<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zxh23682.github.io</id>
    <title>zxh23682 的博客</title>
    <updated>2020-12-20T01:30:54.710Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zxh23682.github.io"/>
    <link rel="self" href="https://zxh23682.github.io/atom.xml"/>
    <subtitle>一个蒟蒻OIer</subtitle>
    <logo>https://zxh23682.github.io/images/avatar.png</logo>
    <icon>https://zxh23682.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, zxh23682 的博客</rights>
    <entry>
        <title type="html"><![CDATA[贪心学习笔记]]></title>
        <id>https://zxh23682.github.io/post/tan-xin-xue-xi-bi-ji/</id>
        <link href="https://zxh23682.github.io/post/tan-xin-xue-xi-bi-ji/">
        </link>
        <updated>2020-12-20T01:29:47.000Z</updated>
        <content type="html"><![CDATA[<p>早就应该写了。现在来补</p>
<hr>
<h1 id="概念">概念</h1>
<p>贪心算法又叫登山算法，它的根本思想是逐步到达山顶，即逐步获得最优解，是解决最优化问题时的一种简单但是适用范围有限的策略。</p>
<p>贪心算法没有固定的框架，算法设计的关键是贪婪策略的选择。贪心策略要无后向性，也就是说某状态以后的过程不会影响以前的状态，至于当前状态有关。</p>
<p>贪心算法是对某些求解最优解问题的最简单、最迅速的技术。某些问题的最优解可以通过一系列的最优的选择即贪心选择来达到 。但局部最优并不总能获得整体最优解，但通常能获得近似最优解。</p>
<p>在每一部贪心选择中，只考虑当前对自己最有利的选择，而不去考虑在后面看来这种选择是否合理。</p>
<hr>
<h1 id="贪心算法求解事应考虑的问题">贪心算法求解事应考虑的问题</h1>
<ul>
<li>候选集合</li>
</ul>
<p>为了构造问题的解决方案，有一个候选集合 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> 作为问题的可能解，问题的最终解均取自于候选集合 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>。</p>
<ul>
<li>解集合 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span></li>
</ul>
<p>随着贪心选择的进行，解集合不断扩展，直到构成一个满足问题的完整解。</p>
<ul>
<li>解决函数</li>
</ul>
<p>检查解集合是否构成问题的完整解。</p>
<ul>
<li>选择函数</li>
</ul>
<p>即贪心策略，这是贪心算法的关键，它指出哪个候选对象有希望构成成问题的解。</p>
<ul>
<li>可行函数</li>
</ul>
<p>检查解集合中加入一个候选对象是否可行，即解集合扩展后是否满足约束条件。</p>
<hr>
<h1 id="贪心算法的基本步骤">贪心算法的基本步骤</h1>
<ul>
<li>
<p>从问题的某个初始解出发</p>
</li>
<li>
<p>采用循环语句，当可以向求解目标前进一步时，就根据局部最优策略，得到一个不分解，缩小问题的范围或规模。</p>
</li>
<li>
<p>将所有的部分解综合起来，得到问题的最终解。</p>
</li>
</ul>
<pre><code class="language-cpp">Greedy(C){ //C是问题的输入集合即候选集合
	S = {}; //初始解集合为空
		while(not solution(S)){ //集合S没有构成问题的一个解
				x = select(C); //在候选集合C中做贪心选择
				if feasible(S,x); //判断集合加入x后的解是否可行
					S += {x};
					C -= {s};
		}
		return S;
}
</code></pre>
<hr>
<h1 id="贪心策略选择">贪心策略选择</h1>
<p>贪心算法的原理是通过局部最优来达到全局最优，采用的是逐步构造最优解的方法。在每个阶段，都做出一个看上去最优的，决策一旦做出，就不再更改。</p>
<p>要选出最优解可不是一件容易的事，要证明局部最优为全局最优，要进行数学证明，否则就不能说明为全局最优。</p>
<p>很多问题表面上看来用贪心算法可以找到最优解，实际上却把最优解给漏掉了。这就像现实生活中的 “贪小便宜吃大亏” 。所以我们在解决问题的时候，一定要谨慎使用贪心算法，一定要注意这个问题适不适合采用贪心算法。</p>
<p>贪心算法很多时候并不能达到全局最优，为什么我们还要使用它呢？</p>
<p>因为在很多大规模问题中，寻找最优解是一件相当费时耗力的事情，有时候付出大量人力物力财力后，回报并不与投入成正比。在这个时候选择相对最优的贪心算法就比较经济可行了。有的问题对最优的要求不是很高，在充分衡量付出和回报后，选择贪心算法未尝不是一种不错的选择。</p>
<hr>
<h1 id="练习">练习</h1>
<h2 id="题目">题目：</h2>
<ul>
<li>组成新数最小</li>
</ul>
<p>键盘输入一个较大的正整数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，去掉其中任意 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> 个数字后剩下的数字按原左右次序将组成一个新的正整数。对于给定的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>，通过编程寻找一种方案使得剩下的数字组成的新数最小。</p>
<p>输出应包括所去掉的数字的位置和组成的新的正整数。</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>240</mn></msup></mrow><annotation encoding="application/x-tex">1≤n≤10^{240}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">4</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>s</mi><mo>≤</mo><mn>20</mn></mrow><annotation encoding="application/x-tex">0≤s≤20</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span></span></span></span>。</p>
<h2 id="思路">思路：</h2>
<p>因为输入的数字比较大，将输入的数字存储为字符串格式，在删除时记录删除的位置。</p>
<p>如果让高位的数字尽量小，数字的总值就小。</p>
<p>从高位到低位，让相邻的数字进行比较（总是让左边数字的与右边的数字比较），如果高位的数字比低位大，就把高位删除。</p>
<p>如果比较过后删除了高位，那么将低位与删除的高位的左边数字进行比较，如果高位数字大，把高位删除。</p>
<p>即删除 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 位后，必须向前考虑 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 位与第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 位进行比较。</p>
<p>例如：</p>
<pre><code>n = 2 3 1 1 8 3。
3 比 1 大删除：n = 2 空 1 1 8 3
2 比 1 大删除：n = 空 空 1 1 8 3
8 比 3 大删除：n = 空 空 1 1 空 3
即删除 i 位后，必须向前考虑 i-1 位与第 i+1 位进行比较
</code></pre>
<p>如果前面高位出现 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，这里不考虑。</p>
<p>如果数字全是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，应该保留一个零。</p>
<p>如果比较一遍删除的位数不够 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>，就考虑删除后几位。</p>
<p>在下面代码中，用字符 <span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;#&#039; at position 1: #̲'>#</span> 来表示数字删除，处理的时候再把 <span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;#&#039; at position 1: #̲'>#</span> 一起删除。</p>
<p>保证数据正确有解。</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">Code:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span></p>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include &lt;string&gt;
using namespace std;
string index=&quot;&quot;; //记录删除的下标
int count=0; //删除的次数
int main() {
	string tanxin(string num,int s); //贪心算法函数
	string process(string minnum); //处理函数
	int s; //要删除的位数
	string a;
	cin&gt;&gt;a;
	string num=a; //为了方便定义的时候初始化
	string minnum;
	cout&lt;&lt;&quot;请输入您想要去掉几个数字：&quot;;
	cin&gt;&gt;s;
	minnum=tanxin(num,s);
	cout&lt;&lt;&quot;开始数字为：&quot;&lt;&lt;num&lt;&lt;endl;
	cout&lt;&lt;&quot;处理过后的结果为:&quot;;
	cout&lt;&lt;process(minnum)&lt;&lt;endl;
	cout&lt;&lt;&quot;删除的下标为:&quot;;
	cout&lt;&lt;index&lt;&lt;endl;
	return 0;
}
string tanxin(string num,int s) {
	int i,j;
	string result=num;
	for(i=0; i&lt;num.size()&amp;&amp;count&lt;s; i++) {
		if(result[i]&gt;result[i+1]) {
			result[i]='#'; //置#代表删除
			index.insert(index.size(),std::to_string(i)); //在尾部插入
			count++;
			if((i-1&gt;=0)&amp;&amp;result[i-1]&gt;result[i+1]) {
				result[i-1]='#';
				index.insert(index.size(),std::to_string(i-1)); //在尾部插入
				count++;
			}
		}
	}
	if(count&lt;s) { //没有删除s次
		int s0=s-count;
		for(i=result.size()-1; i&gt;=s0; i--) {
			result[i]='#';
		}
	}
	return result;
}
string process(string minnum) { //处理找到的字符串
	string result=minnum,resultsum=&quot;&quot;;
	int i,temp=0;
	//判断前端是否有多余0
	for(i=0; i&lt;minnum.size(); i++) {
		if(result[i]=='0'&amp;&amp;result[i]=='#') { //前面有不为0 且不为#的数字,把标识变量置1
			temp=1;
		}
		if(result[i]=='0'&amp;&amp;temp==0) {
			result[i]='#';
		}
	}
	//去除占位符#
	for(i=0; i&lt;result.size(); i++) {
		if(result[i]!='#') resultsum += result[i]; //拼接
	}
	return resultsum;
}
</code></pre>
<p><strong>注意：以上代码需要 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>+</mo><mo>+</mo><mn>11</mn></mrow><annotation encoding="application/x-tex">C++11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">1</span><span class="mord">1</span></span></span></span></strong>。</p>
<p>样例：</p>
<pre><code>input:

231183
3

output:

请输入您想要去掉几个数字：开始数字为：231183
处理过后的结果为:113
删除的下标为:104

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[自动删犇器]]></title>
        <id>https://zxh23682.github.io/post/zi-dong-shan-ben-qi/</id>
        <link href="https://zxh23682.github.io/post/zi-dong-shan-ben-qi/">
        </link>
        <updated>2020-12-20T01:28:37.000Z</updated>
        <content type="html"><![CDATA[<p>在洛谷主页 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mn>12</mn></mrow><annotation encoding="application/x-tex">F12</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord">1</span><span class="mord">2</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>n</mi><mo>+</mo><mi>F</mi><mn>12</mn></mrow><annotation encoding="application/x-tex">Fn+F12</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord">1</span><span class="mord">2</span></span></span></span>，进入控制台 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span></span></span></span><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>s</mi><mi>o</mi><mi>l</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">console</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span></span></span></span>。</p>
<p>输入 <code>allow pasting</code> 后回车。</p>
<p>输入下面的代码并回车：</p>
<pre><code>switchMode('my');
function load() {
    console.log('page ' + feedPage);
     $.get(&quot;/feed/&quot; + feedMode + &quot;?page=&quot; + feedPage, function (resp) {
		$feed.append(resp);
         $(&quot;#feed-more&quot;).children(&quot;a&quot;).text(&quot;点击查看更多...&quot;)
		$(&quot;[name=feed-delete]&quot;).click(function () {
             $.post(&quot;/api/feed/delete/&quot; + $(this).attr('data-feed-id'), function () {
                switchMode('all');
            })
        }); feedPage++;
        if (resp.indexOf('没有更多动态了') != -1) console.log('finished');
        else setTimeout(load, 200);
    });
}
setTimeout(load, 1000)
</code></pre>
<p>等待数字停止后，输入下面一段代码并回车：</p>
<pre><code>var l =  $('#feed &gt; li &gt; div.am-comment-main &gt; header &gt; div &gt; a:nth-child(2)');
function f(i) {
$.post(&quot;/api/feed/delete/&quot;+ $(l[i]).attr('data-feed-id'), function() {
console.log(i);
if(i&lt;l.length-1)setTimeout(`f(${i+1})`,200);
})
}
f(0);
</code></pre>
<p>等待数字停止，犇犇就删完了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 CF1462A 【Favorite Sequence】]]></title>
        <id>https://zxh23682.github.io/post/ti-jie-cf1462a-favorite-sequence/</id>
        <link href="https://zxh23682.github.io/post/ti-jie-cf1462a-favorite-sequence/">
        </link>
        <updated>2020-12-16T10:14:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="题意">题意：</h3>
<p>给定一个数组，一头一尾地输出它。</p>
<h3 id="思路">思路：</h3>
<p>定义 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mi>e</mi><mi>a</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">head</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>i</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">tail</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> 分别初始化为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 和数组长度，判断数组长度的奇偶性，分别进行讨论。每一次输出完后 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mi>e</mi><mi>a</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">head</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>i</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">tail</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> 加 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</p>
<h3 id="code"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">Code:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span></h3>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
int T;
int n;
long long b[305];
int main() {
	scanf(&quot;%d&quot;,&amp;T);
	while(T--) {
		scanf(&quot;%d&quot;,&amp;n);
		for (int i=1; i&lt;=n; i++) scanf(&quot;%lld&quot;,&amp;b[i]);
		if (n%2 == 0) { //分奇偶讨论
			int head=1,tail=n;
			while(head &lt;= tail) {
				printf(&quot;%lld %lld &quot;,b[head],b[tail]); //输出头和尾的数
				head++;
				tail--;
			}
		}
        else {
        	int head=1,tail=n;
        	while(head &lt; tail) {
        		printf(&quot;%lld %lld &quot;,b[head],b[tail]); //输出头和尾的数
				head++;
				tail--;
			}
			printf(&quot;%lld&quot;,b[n/2+1]); //输出中间的数
		}
		printf(&quot;\n&quot;);
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 CF1415A 【Prison Break】]]></title>
        <id>https://zxh23682.github.io/post/ti-jie-cf1415a-prison-break/</id>
        <link href="https://zxh23682.github.io/post/ti-jie-cf1415a-prison-break/">
        </link>
        <updated>2020-12-09T10:13:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="题意">题意：</h3>
<p>求方阵上每一个点到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(r,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> 的曼哈顿距离的最大值。</p>
<hr>
<h3 id="思路">思路：</h3>
<p>既然每一个点都要到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(r,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span>，那么最少用的时间一定是用时最长的情况下所用的时间。</p>
<p>我们容易知道：与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(r,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> 曼哈顿距离最大的点一定是四个顶点，即左上角，右上角，左下角，右下角其中的一个。</p>
<p>左上角坐标为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(1,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(r,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> 的曼哈顿距离为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>+</mo><mi>c</mi><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">r+c-2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>。</p>
<p>右上角坐标为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mn>1</mn><mo separator="true">,</mo><mi>m</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(1,m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>，到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(r,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> 的曼哈顿距离为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>−</mo><mn>1</mn><mo>+</mo><mi>m</mi><mo>−</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">r-1+m-c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>。</p>
<p>左下角坐标为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>n</mi><mo separator="true">,</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(n,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(r,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> 的曼哈顿距离为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mi>r</mi><mo>+</mo><mi>c</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-r+c-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</p>
<p>右下角坐标为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(n,m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>，到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(r,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> 的曼哈顿距离为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mi>r</mi><mo>+</mo><mi>m</mi><mo>−</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">n-r+m-c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>。</p>
<p>那么只要求出这四个顶点到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(r,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> 的曼哈顿距离的最大值，即为答案。</p>
<p>时间复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>T</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span>。</p>
<hr>
<h3 id="code"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Code</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span></span></span></span>：</h3>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
typedef long long ll;
inline ll read() {
	register ll s=0,w=1;
	char ch=getchar();
	while(ch&lt;'0'||ch&gt;'9') {
		if(ch=='-')w=-1;
		ch=getchar();
	}
	while(ch&gt;='0'&amp;&amp;ch&lt;='9')s=s*10+ch-'0',ch=getchar();
	return s*w;
}
ll T;
ll n,m,r,c;
ll ans=0;
ll ans1=0,ans2=0;
int main() {
	T=read();
	while (T--) {
		n=read();m=read();r=read();c=read();
	    ans1=max(n-r+m-c,r+c-2);  //右下角与左上角到目标的曼哈顿距离的更大值 
	    ans2=max(r-1+m-c,n-r+c-1); //右上角与左下角到目标的曼哈顿距离的更大值  
	    ans=max(ans1,ans2); //最后求出答案 
		printf(&quot;%lld\n&quot;,ans);
		ans=0; //别忘了清零 
	}
	return 0;
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 CF748C 【Santa Claus and Robot】]]></title>
        <id>https://zxh23682.github.io/post/ti-jie-cf748c-santa-claus-and-robot/</id>
        <link href="https://zxh23682.github.io/post/ti-jie-cf748c-santa-claus-and-robot/">
        </link>
        <updated>2020-12-09T10:12:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="题意">题意：</h3>
<p>机器人在网格线上行走，从 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">p1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord">1</span></span></span></span> 点开始，沿最短路径到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">p2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord">2</span></span></span></span>，再沿最短路径到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mn>3</mn></mrow><annotation encoding="application/x-tex">p3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord">3</span></span></span></span>，依此类推。在此过程中留下了行走的运动轨迹，用 <code>RULD</code> 表示。若只给出运动轨迹，求最少的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">i</span></span></span></span> 点的个数。</p>
<h3 id="思路">思路：</h3>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">i</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">pi+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 是沿最短路径走的，因此在此路径中不可能同时出现 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">UD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">LR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span> 两个方向。因此只要同时出现，那一定证明此刻已往下一个目标点走。</p>
<p>用四个方向的标记分别记录，然后对于每个点后都要初始化标记的值。</p>
<h3 id="code"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Code</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span></span></span></span>：</h3>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
int n;
char a[200005];
map&lt;char,int&gt; mp;
int vis[5];
int ans=1;
bool judge(int x) {
	if(x==0 &amp;&amp; vis[1]) return true;
	if(x==1 &amp;&amp; vis[0]) return true;
	if(x==2 &amp;&amp; vis[3]) return true;
	if(x==3 &amp;&amp; vis[2]) return true;
	return false;
}
int main() {
	mp['L']=0;
	mp['R']=1;
	mp['U']=2;
	mp['D']=3;
	while(scanf(&quot;%d&quot;,&amp;n)==1) {
		scanf(&quot;%s&quot;,a);
		ans=1;
		memset(vis,0,sizeof(vis));
		for(int i=0; i&lt;n; i++) {
			int tmp=mp[a[i]];
			if(judge(tmp)) {
				memset(vis,0,sizeof(vis));
				ans++; 
			}
			vis[tmp]=1;
		}
		printf(&quot;%d\n&quot;,ans);
		return 0;
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C++ 常用模板]]></title>
        <id>https://zxh23682.github.io/post/c-chang-yong-mo-ban/</id>
        <link href="https://zxh23682.github.io/post/c-chang-yong-mo-ban/">
        </link>
        <updated>2020-12-03T14:05:17.000Z</updated>
        <content type="html"><![CDATA[<p>扔几个链接。</p>
<p>https://www.luogu.com.cn/blog/Mars-LG/STL-usage</p>
<p>https://www.luogu.com.cn/blog/Mars-LG/chang-yong-bei-bao-mu-ban</p>
<p>https://www.luogu.com.cn/paste/o1b1bau1</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020 CSP-J 游记]]></title>
        <id>https://zxh23682.github.io/post/2020-csp-j-you-ji/</id>
        <link href="https://zxh23682.github.io/post/2020-csp-j-you-ji/">
        </link>
        <updated>2020-12-01T12:27:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="前言">前言：</h3>
<p>这是我第一次（肯定不是最后一次）参加 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>S</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">CSP</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>。</p>
<p>祝我 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>p</mi><mo>+</mo><mo>+</mo></mrow><annotation encoding="application/x-tex">rp++</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span></span></span></span>。</p>
<h2 id="初赛">初赛</h2>
<p><a href="https://www.luogu.com.cn/paste/9gxhp5ce">详见</a></p>
<h2 id="复赛">复赛</h2>
<h3 id="textttday-5-2020111"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext mathvariant="monospace">Day</mtext><mtext> </mtext><mtext mathvariant="monospace">-5</mtext><mtext> </mtext><mtext mathvariant="monospace">2020/11/1</mtext></mrow><annotation encoding="application/x-tex">\texttt{Day -5 2020/11/1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9166599999999999em;vertical-align:-0.22222em;"></span><span class="mord text"><span class="mord texttt">Day -5 2020/11/1</span></span></span></span></span></h3>
<p>复习期中考试......</p>
<hr>
<h3 id="textttday-4-2020113"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext mathvariant="monospace">Day</mtext><mtext> </mtext><mtext mathvariant="monospace">-4</mtext><mtext> </mtext><mtext mathvariant="monospace">2020/11/3</mtext></mrow><annotation encoding="application/x-tex">\texttt{Day -4 2020/11/3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9166599999999999em;vertical-align:-0.22222em;"></span><span class="mord text"><span class="mord texttt">Day -4 2020/11/3</span></span></span></span></span></h3>
<p>考点在曹杨二中文萃楼<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>613</mn></mrow><annotation encoding="application/x-tex">613</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">1</span><span class="mord">3</span></span></span></span> <s>欢迎面基</s>，离我家好远。</p>
<p>复习语文。。明天语文期中考试。\fad</p>
<hr>
<h3 id="textttday-1-2020116"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext mathvariant="monospace">Day</mtext><mtext> </mtext><mtext mathvariant="monospace">-1</mtext><mtext> </mtext><mtext mathvariant="monospace">2020/11/6</mtext></mrow><annotation encoding="application/x-tex">\texttt{Day -1 2020/11/6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9166599999999999em;vertical-align:-0.22222em;"></span><span class="mord text"><span class="mord texttt">Day -1 2020/11/6</span></span></span></span></span></h3>
<p>期中考试考完了。</p>
<p>明天 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>S</mi><mi>P</mi><mo>−</mo><mi>J</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">CSP-J2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mord">2</span></span></span></span> 怕怕怕怕怕怕。</p>
<hr>
<h3 id="textttday-0-2020117"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext mathvariant="monospace">Day</mtext><mtext> </mtext><mtext mathvariant="monospace">0</mtext><mtext> </mtext><mtext mathvariant="monospace">2020/11/7</mtext></mrow><annotation encoding="application/x-tex">\texttt{Day 0 2020/11/7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9166599999999999em;vertical-align:-0.22222em;"></span><span class="mord text"><span class="mord texttt">Day 0 2020/11/7</span></span></span></span></span></h3>
<p>一早就走了。</p>
<p>开考。</p>
<p>cyez密码出了点问题，监考老师直接把文件发给我们了。</p>
<p>让我没想到的是，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">T1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">1</span></span></span></span> 就炸了。</p>
<p>考场上没想到直接从大到小循环 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>24</mn></mrow><annotation encoding="application/x-tex">24</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">4</span></span></span></span> 次暴力就可以了。</p>
<p>于是打了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>60</mn></mrow><annotation encoding="application/x-tex">60</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">0</span></span></span></span> 部分分，还打了表。</p>
<p>考场代码：</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
typedef long long ll;
ll n;
ll max(ll a,ll b) {
	if (a&gt;=b) return a;
	else return b;
}
ll min(ll p,ll q) {
	if (p&lt;q) return p;
	else return q;
}
bool f(ll x) {
	bool flag=false;
	for (int l=1; pow(2,l)&lt;=n; l++) {
		if (pow(2,l)==n) flag=true;
	}
	if (flag==true) return true;
	else return false;
}
int main() {
	freopen(&quot;power.in&quot;,&quot;r&quot;,stdin);
	freopen(&quot;power.out&quot;,&quot;w&quot;,stdout);
	scanf(&quot;%lld&quot;,&amp;n);
	if (n%2==1) {
		printf(&quot;-1\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	if (n==2) {
		printf(&quot;2\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	if (n==4) {
		printf(&quot;4\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	if (n==6) {
		printf(&quot;4 2\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	if (n==8) {
		printf(&quot;8\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	if (n==10) {
		printf(&quot;8 2\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	if (n==126) {
		printf(&quot;64 32 16 8 4 2\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	if (n==254) {
		printf(&quot;128 64 32 16 8 4 2\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	if (n==510) {
		printf(&quot;256 128 64 32 16 8 4 2\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	if (n==1022) {
		printf(&quot;512 256 128 64 32 16 8 4 2\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	if (n==2046) {
		printf(&quot;1024 512 256 128 64 32 16 8 4 2\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	if (n==4094) {
		printf(&quot;2048 1024 512 256 128 64 32 16 8 4 2\n&quot;);
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	for (int k=1; pow(2,k)&lt;=n; k++) {
		if (pow(2,k)==n) {
			printf(&quot;%d\n&quot;,n);
			fclose(stdin);
			fclose(stdout);
			return 0;
		}
	}
	while(f(n)==false) {
		for (int i=n; i&gt;=1; i--) {
			if (pow(2,i)&lt;n) {
				n -= pow(2,i);
				printf(&quot;%d &quot;,pow(2,i));
			}
		}
		printf(&quot;%d\n&quot;,n);
	}
	fclose(stdin);
	fclose(stdout);
	return 0;
}
</code></pre>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">T2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">2</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 的模拟 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>+</mo></mrow><annotation encoding="application/x-tex">+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span></span></span></span> 快排过了大样例。</p>
<p>但考试的时候没有算清楚复杂度。否则会用更快的排序方式的。</p>
<p>考场代码：</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
int n,w;
int a[100005];
int b[100005];
int ans;
int max(int p,int q) {
	if (p&gt;=q) return p;
	else return q;
}
bool cmp(int x,int y) {
	return x&gt;y;
}
int main() {
	freopen(&quot;live.in&quot;,&quot;r&quot;,stdin);
	freopen(&quot;live.out&quot;,&quot;w&quot;,stdout);
	memset(b,0,sizeof(b));
	scanf(&quot;%d %d&quot;,&amp;n,&amp;w);
	for (int i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;a[i]);
//	sort(a+1,a+n+1);
//	for (int i=1;i&lt;=n;i++) printf(&quot;%d &quot;,a[i]);
	for (int p=1;p&lt;=n;p++) {
		ans = max(1,p*w/100);
	//	printf(&quot;%d &quot;,ans);
		b[p] = a[p];
	    sort(b+1,b+n+1,cmp);
	    printf(&quot;%d &quot;,b[ans]);
	}
	fclose(stdin);
	fclose(stdout);
	return 0;
}
</code></pre>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mn>3</mn></mrow><annotation encoding="application/x-tex">T3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">3</span></span></span></span> 看到题就蒙了。全输出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 骗分。</p>
<p>然而出了考场发现 <code>cin&gt;&gt;s</code> 不能输入包含空格的字符串。只有</p>
<p><code>getline(cin,s)</code> 才可以。</p>
<p>爆<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">T4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">4</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">dfs</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">s</span></span></span></span>暴力骗分。</p>
<p>正解应该是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">dp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span></span></span></span>，没想到。</p>
<p>期望：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>70</mn><mo>+</mo><mn>60</mn><mo>+</mo><mn>0</mn><mo>+</mo><mn>10</mn><mo>=</mo><mn>140</mn></mrow><annotation encoding="application/x-tex">70+60+0+10=140</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mord">0</span></span></span></span>。</p>
<p>估分：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>60</mn><mo>+</mo><mn>40</mn><mo>+</mo><mn>0</mn><mo>+</mo><mn>10</mn><mo>=</mo><mn>110</mn></mrow><annotation encoding="application/x-tex">60+40+0+10=110</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span></span></span></span>。</p>
<p>凉了。</p>
<p>出考场。</p>
<p>然而，一到家我就会做了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">T1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">1</span></span></span></span>，打出了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">AC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> 代码。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
typedef long long ll;
ll n;
int main() {
  freopen(&quot;power.in&quot;,&quot;r&quot;,stdin);
  freopen(&quot;power.out&quot;,&quot;w&quot;,stdout);
    scanf(&quot;%lld&quot;,&amp;n);
    if (n%2==1) { 
        printf(&quot;-1\n&quot;);
        fclose(stdin);
        fclose(stdout);
        return 0;
    }
    for (int i=24;i&gt;=1;i--) {
        if (pow(2,i)&lt;=n) {
            cout&lt;&lt;(ll)pow(2,i)&lt;&lt;&quot; &quot;; 
            n -= pow(2,i); 
        }
        if (n==0) break; 
    }
    fclose(stdin);
    fclose(stdout);
    return 0;
}
</code></pre>
<p>想打人</p>
<p>晚上民间数据出来了。</p>
<p><code>计蒜客：70+50+0+5=125</code></p>
<p><code>oitiku：65+50+0+0=115</code></p>
<hr>
<h3 id="textttday-1-2020118"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext mathvariant="monospace">Day</mtext><mtext> </mtext><mtext mathvariant="monospace">1</mtext><mtext> </mtext><mtext mathvariant="monospace">2020/11/8</mtext></mrow><annotation encoding="application/x-tex">\texttt{Day 1 2020/11/8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9166599999999999em;vertical-align:-0.22222em;"></span><span class="mord text"><span class="mord texttt">Day 1 2020/11/8</span></span></span></span></span></h3>
<p>下午洛谷所有数据都出来了。</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>60</mn><mo>+</mo><mn>50</mn><mo>+</mo><mn>0</mn><mo>+</mo><mn>5</mn><mo>=</mo><mn>115</mn></mrow><annotation encoding="application/x-tex">60+50+0+5=115</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">5</span></span></span></span></p>
<p>估计奖项：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>=</mo></mrow><annotation encoding="application/x-tex">2=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span>。</p>
<p>总结：</p>
<p>考场上可以再冷静一点，把复杂度算清楚，再耐心一点，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">T1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">T2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">2</span></span></span></span>都是可以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">AC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> 的。</p>
<hr>
<h3 id="textttday-9-20201116"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext mathvariant="monospace">Day</mtext><mtext> </mtext><mtext mathvariant="monospace">9</mtext><mtext> </mtext><mtext mathvariant="monospace">2020/11/16</mtext></mrow><annotation encoding="application/x-tex">\texttt{Day 9 2020/11/16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9166599999999999em;vertical-align:-0.22222em;"></span><span class="mord text"><span class="mord texttt">Day 9 2020/11/16</span></span></span></span></span></h3>
<p>中午 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mn>302</mn></mrow><annotation encoding="application/x-tex">B302</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">3</span><span class="mord">0</span><span class="mord">2</span></span></span></span> 查分。</p>
<p>官网卡了好久才进去（貌似我是唯一一个进去的）</p>
<p>官方成绩：<code>65+50+0+0=115</code></p>
<p>事实证明，洛谷是最靠谱的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mi>J</mi></mrow><annotation encoding="application/x-tex">OJ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span></span>。</p>
<hr>
<h3 id="textttday-end-20201121"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext mathvariant="monospace">Day</mtext><mtext> </mtext><mtext mathvariant="monospace">END</mtext><mtext> </mtext><mtext mathvariant="monospace">2020/11/21</mtext></mrow><annotation encoding="application/x-tex">\texttt{Day END 2020/11/21}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9166599999999999em;vertical-align:-0.22222em;"></span><span class="mord text"><span class="mord texttt">Day END 2020/11/21</span></span></span></span></span></h3>
<p>在咕了一天多以后，在上晚课的时候公布了分数线。</p>
<p>官网果然炸了。</p>
<p>结果：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>=</mo></mrow><annotation encoding="application/x-tex">2=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span>。</p>
<p>我太菜了。</p>
<p>本篇游记更新结束 ~</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[洛谷 10 月月赛 II 赛后总结]]></title>
        <id>https://zxh23682.github.io/post/luo-gu-10-yue-yue-sai-ii-sai-hou-zong-jie/</id>
        <link href="https://zxh23682.github.io/post/luo-gu-10-yue-yue-sai-ii-sai-hou-zong-jie/">
        </link>
        <updated>2020-11-28T08:46:26.000Z</updated>
        <content type="html"><![CDATA[<p>结果：<code>150pts rk 286</code>。</p>
<p><code>100+30+20+0=150</code></p>
<hr>
<h3 id="t1">T1：</h3>
<p>找规律题。</p>
<figure data-type="image" tabindex="1"><img src="https://ericnth.cn/wp-content/uploads/2020/11/post-2705-5fa500797c7d2.png" alt="" loading="lazy"></figure>
<h3 id="t2">T2：</h3>
<p>做了 m=0 的部分分。</p>
<figure data-type="image" tabindex="2"><img src="https://ericnth.cn/wp-content/uploads/2020/11/post-2705-5fa50079bcf70.png" alt="" loading="lazy"></figure>
<h3 id="t3"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mn>3</mn></mrow><annotation encoding="application/x-tex">T3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">3</span></span></span></span></h3>
<p>前缀和 + 暴力 = AC Subtask 1。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
typedef long long ll;
ll n,m;
ll b[2000005];
ll ori[2000005];
char p;
ll ans = 0;
int main() {
	cin&gt;&gt;n&gt;&gt;m;
	for (int i=1; i&lt;=n; i++) {
		cin&gt;&gt;ori[i];
		b[i] = b[i-1]+ori[i];
	}
	for (int i=1; i&lt;=m; i++) {
		cin&gt;&gt;p;
		if (p == 'C') {
			ll i,val;
			cin&gt;&gt;i&gt;&gt;val;
			for (int j=i; j&lt;=n; j++) b[j] += (val-ori[i]);
			ori[i] = val;
		}
		if (p == 'A') {
			ll s;
			bool flag = true;
			cin&gt;&gt;s;
			for (int l=1; l&lt;=n; l++) {
				for (int r=l; r&lt;=n; r++) {
					if (b[r]-b[l-1] == s) {
						cout&lt;&lt;l&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt;endl;
						flag = false;
						break;
					}
				}
				if (flag==false) break;
			}
			if (flag) cout&lt;&lt;&quot;none&quot;&lt;&lt;endl;
		}
	}
	return 0;
}
</code></pre>
<h3 id="t4">T4：</h3>
<p>像我这种蒟蒻当然不会啦。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[洛谷10月月赛 I 赛后总结]]></title>
        <id>https://zxh23682.github.io/post/luo-gu-10-yue-yue-sai-i-sai-hou-zong-jie/</id>
        <link href="https://zxh23682.github.io/post/luo-gu-10-yue-yue-sai-i-sai-hou-zong-jie/">
        </link>
        <updated>2020-11-28T08:45:26.000Z</updated>
        <content type="html"><![CDATA[<p>结果：</p>
<p><code>div1 rk190 10+0+0+5=15pts</code></p>
<p><code>div2 rk324 100+40+10+0=150pts</code></p>
<hr>
<h3 id="div2">div2：</h3>
<h4 id="t1">T1：</h4>
<p>太水的一道题，直接加加加就好了。</p>
<p>本来 5 分钟就能 AC 的，但因为讨厌的测评机坏了，测了 30min 才 AC <s>（本来还有机会一血的）</s></p>
<h4 id="t2">T2：</h4>
<p>想打全部分的，但 WA 了几个点，40pts，调了一会无果，跳过了。</p>
<h4 id="t3">T3：</h4>
<p>用怪怪的方法骗了 subtask3 的 10 分。</p>
<h4 id="t4">T4：</h4>
<p>不会。</p>
<h3 id="个人评价难度">个人评价难度：</h3>
<p>红黄绿蓝。</p>
<hr>
<h3 id="div1">div1：</h3>
<h4 id="t1-2">T1：</h4>
<p>同 div2 T3，10pts。</p>
<h4 id="t2-2">T2：</h4>
<p>不会。</p>
<h4 id="t3-2">T3：</h4>
<p>不会。</p>
<h4 id="t4-2">T4：</h4>
<p>输出样例，5pts。</p>
<h3 id="个人评价难度-2">个人评价难度：</h3>
<p>绿蓝紫黑。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 CF621D 【Rat Kwesh and Cheese】]]></title>
        <id>https://zxh23682.github.io/post/ti-jie-cf621d-rat-kwesh-and-cheese/</id>
        <link href="https://zxh23682.github.io/post/ti-jie-cf621d-rat-kwesh-and-cheese/">
        </link>
        <updated>2020-11-27T10:45:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="题意">题意：</h3>
<p>给三个实数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x,y,z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>。求出值最大的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，输出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 对应的字符串。</p>
<h3 id="思路">思路：</h3>
<p>先将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>12</mn></mrow><annotation encoding="application/x-tex">12</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span></span></span></span> 个字符串打表，读入 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x,y,z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span> 后，算出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">a_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>11</mn></msub></mrow><annotation encoding="application/x-tex">a_{11}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的值，找出其中的最小值，最后输出对应的字符串即可。</p>
<h3 id="code"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Code</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span></span></span></span>：</h3>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
long double x,y,z;
long double a[12];
int ans=0;
const char s[12][10]= { //12个字符串 
	&quot;x^y^z&quot;,
	&quot;x^z^y&quot;,
	&quot;(x^y)^z&quot;,
	&quot;(x^z)^y&quot;,
	&quot;y^x^z&quot;,
	&quot;y^z^x&quot;,
	&quot;(y^x)^z&quot;,
	&quot;(y^z)^x&quot;,
	&quot;z^x^y&quot;,
	&quot;z^y^x&quot;,
	&quot;(z^x)^y&quot;,
	&quot;(z^y)^x&quot;
};
int main() {
	cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;
	a[0]=pow(y,z)*log(x); //计算所有a[i]的值 
	a[1]=pow(z,y)*log(x);
	a[2]=a[3]=y*z*log(x);
	a[4]=pow(x,z)*log(y);
	a[5]=pow(z,x)*log(y);
	a[6]=a[7]=x*z*log(y);
	a[8]=pow(x,y)*log(z);
	a[9]=pow(y,x)*log(z);
	a[10]=a[11]=x*y*log(z);
	for(int i=1; i&lt;=11; i++) { //求出最大值a[i]的下标 
		if(a[i]&gt;a[ans]) ans=i;
	}	
	printf(&quot;%s\n&quot;,s[ans]);
	return 0;
}
</code></pre>
]]></content>
    </entry>
</feed>